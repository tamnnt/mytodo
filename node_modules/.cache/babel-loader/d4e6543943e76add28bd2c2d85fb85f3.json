{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\THANHTAM\\\\OneDrive - Hochiminh City University of Education\\\\Workspace\\\\vscode\\\\ReactJS\\\\Todo-NMC\\\\todos_timeline\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n/* eslint-disable no-self-compare */\n/* eslint-disable no-unused-vars */\n/* eslint-disable array-callback-return */\n/* eslint-disable eqeqeq */\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { confirmAlert } from 'react-confirm-alert'; // Import lib\nimport 'react-confirm-alert/src/react-confirm-alert.css'; //Import CSS\nimport ToDoList from \"./component/TodoList\";\nimport ToDoForm from \"./component/TodoForm\";\nimport storage from './util/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [toDoList, setToDoList] = useState(storage.get());\n  // Xử lý công việc đã hoàn thành\n  const handleToggle = id => {\n    let mapper = toDoList.map(task => {\n      return task.id === Number(id) ? {\n        ...task,\n        complete: !task.complete\n      } : {\n        ...task\n      };\n    });\n    setToDoList(mapper);\n    storage.set(mapper);\n  };\n  // Lọc ra để xóa những công việc đã hoàn thành\n  const handleFilter = () => {\n    let notComplete = [];\n    toDoList.filter(task => {\n      if (task.complete) {\n        notComplete.push(task.complete);\n      }\n    });\n    if (notComplete.length > 0) {\n      confirmAlert({\n        title: 'Thông báo',\n        message: 'Hành động này không thể khôi phục. Bạn có chắn chắn muốn xóa những việc đã hoàn thành?',\n        buttons: [{\n          label: 'Yes',\n          onClick: () => {\n            let filtered = toDoList.filter(task => {\n              return !task.complete;\n            });\n            setToDoList(filtered);\n            storage.set(filtered);\n          }\n        }, {\n          label: 'No'\n        }]\n      });\n    } else {\n      confirmAlert({\n        title: 'Thông báo',\n        message: 'Chưa có nhiệm vụ nào hoàn thành',\n        buttons: [{\n          label: 'Yes',\n          onClick: () => {\n            return;\n          }\n        }]\n      });\n    }\n  };\n  // Thêm công việc\n  const addTask = (userInput, due) => {\n    let copy = [...toDoList];\n    let maxId = Math.max(...copy.map(task => task.id));\n    copy = [...copy, {\n      id: maxId + 1,\n      task: userInput,\n      complete: false,\n      dateOf: due\n    }];\n    setToDoList(copy);\n    storage.set(copy);\n  };\n  // Xóa task item\n  const handleDelete = id => {\n    let del = toDoList.filter(todo => todo.id != id);\n    setToDoList(del);\n    storage.set(del);\n  };\n  const startUpdate = todo => {\n    document.getElementById(\"task\").value = todo.task;\n    document.getElementById(\"due\").value = todo.dateOf;\n  };\n  // Chỉnh sửa task item\n  const endUpdate = (todo, id) => {\n    let task = document.getElementById(\"task\").value;\n    let due = document.getElementById(\"due\").value;\n    if (task && due && todo.id == todo.id) {\n      let copy = [...toDoList];\n      todo.task = task;\n      todo.dateOf = due;\n      setToDoList(copy);\n      storage.set(copy);\n    } else {\n      confirmAlert({\n        title: 'Thông báo',\n        message: 'Kiểm tra lại dữ liệu (task, due and index) đã được chọn hay chưa hoặc thông tin đã điền đầy đủ hay chưa?',\n        buttons: [{\n          label: 'Yes',\n          onClick: () => {\n            return;\n          }\n        }]\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-h1\",\n        children: \" Todos List \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(ToDoForm, {\n          addTask: addTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ToDoList, {\n          toDoList: toDoList,\n          handleToggle: handleToggle,\n          handleFilter: handleFilter,\n          handleDelete: handleDelete,\n          startUpdate: startUpdate,\n          endUpdate: endUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TOme7G1FGNWu98dzZE+l5q6IstE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","confirmAlert","ToDoList","ToDoForm","storage","App","toDoList","setToDoList","get","handleToggle","id","mapper","map","task","Number","complete","set","handleFilter","notComplete","filter","push","length","title","message","buttons","label","onClick","filtered","addTask","userInput","due","copy","maxId","Math","max","dateOf","handleDelete","del","todo","startUpdate","document","getElementById","value","endUpdate"],"sources":["C:/Users/THANHTAM/OneDrive - Hochiminh City University of Education/Workspace/vscode/ReactJS/Todo-NMC/todos_timeline/src/App.js"],"sourcesContent":["/* eslint-disable no-self-compare */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable eqeqeq */\r\nimport React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { confirmAlert } from 'react-confirm-alert'; // Import lib\r\nimport 'react-confirm-alert/src/react-confirm-alert.css'; //Import CSS\r\nimport ToDoList from \"./component/TodoList\";\r\nimport ToDoForm from \"./component/TodoForm\";\r\nimport storage from './util/storage'\r\n\r\nfunction App() {\r\n  const [toDoList, setToDoList] = useState(storage.get());\r\n  // Xử lý công việc đã hoàn thành\r\n  const handleToggle = (id) => {\r\n    let mapper = toDoList.map((task) => {\r\n      return task.id === Number(id)\r\n        ? { ...task, complete: !task.complete }\r\n        : { ...task };\r\n    });\r\n    setToDoList(mapper);\r\n    storage.set(mapper);\r\n  };\r\n  // Lọc ra để xóa những công việc đã hoàn thành\r\n  const handleFilter = () => {\r\n    let notComplete = [];\r\n    toDoList.filter((task) => {\r\n      if(task.complete){\r\n        notComplete.push(task.complete);\r\n      }\r\n    })\r\n    if(notComplete.length > 0){\r\n      confirmAlert({\r\n        title: 'Thông báo',\r\n        message: 'Hành động này không thể khôi phục. Bạn có chắn chắn muốn xóa những việc đã hoàn thành?',\r\n        buttons: [\r\n            {\r\n            label: 'Yes',\r\n            onClick: () => {\r\n                let filtered = toDoList.filter((task) => {\r\n                  return !task.complete;\r\n                });\r\n                setToDoList(filtered);\r\n                storage.set(filtered);\r\n              }\r\n            },\r\n            {\r\n            label: 'No',\r\n            }]\r\n      });\r\n    }else{\r\n      confirmAlert({\r\n        title: 'Thông báo',\r\n        message: 'Chưa có nhiệm vụ nào hoàn thành',\r\n        buttons: [\r\n            {\r\n            label: 'Yes',\r\n            onClick: () => {return;}\r\n            },]\r\n      });\r\n    }\r\n  };\r\n  // Thêm công việc\r\n  const addTask = (userInput, due) => {\r\n    let copy = [...toDoList];\r\n    let maxId = Math.max(...copy.map((task) => task.id));\r\n    copy = [\r\n      ...copy,\r\n      { id: maxId + 1, task: userInput, complete: false, dateOf: due },\r\n    ];\r\n    setToDoList(copy);\r\n    storage.set(copy);\r\n  };\r\n  // Xóa task item\r\n  const handleDelete = (id)=>{\r\n    let del = toDoList.filter(todo => todo.id != id);\r\n    setToDoList(del);\r\n    storage.set(del);\r\n  }\r\n  const startUpdate = (todo) => {\r\n    document.getElementById(\"task\").value = todo.task;\r\n    document.getElementById(\"due\").value = todo.dateOf;\r\n  }\r\n  // Chỉnh sửa task item\r\n  const endUpdate = (todo,id) => {\r\n      let task = document.getElementById(\"task\").value;\r\n      let due = document.getElementById(\"due\").value;\r\n      if(task && due && todo.id == todo.id){\r\n        let copy = [...toDoList]\r\n        todo.task = task;\r\n        todo.dateOf = due;\r\n        setToDoList(copy);\r\n        storage.set(copy);\r\n      }else{\r\n        confirmAlert({\r\n          title: 'Thông báo',\r\n          message: 'Kiểm tra lại dữ liệu (task, due and index) đã được chọn hay chưa hoặc thông tin đã điền đầy đủ hay chưa?',\r\n          buttons: [\r\n              {\r\n              label: 'Yes',\r\n              onClick: () => {return;}\r\n              },\r\n          ]\r\n      });\r\n      }\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1 className=\"app-h1\"> Todos List </h1>\r\n        <div>\r\n          <ToDoForm addTask={addTask} />\r\n          <ToDoList\r\n            toDoList={toDoList}\r\n            handleToggle={handleToggle}\r\n            handleFilter={handleFilter}\r\n            handleDelete={handleDelete}\r\n            startUpdate={startUpdate}\r\n            endUpdate={endUpdate}\r\n          />\r\n        </div>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}